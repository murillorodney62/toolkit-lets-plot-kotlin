/*
 * Copyright (c) 2021. JetBrains s.r.o.
 * Use of this source code is governed by the MIT license that can be found in the LICENSE file.
 */

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
    id "signing"
    id 'org.jetbrains.dokka' version '0.10.0'
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$projectDir/../docs/api-reference"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testCompile "junit:junit:$junit_version"

    api "org.jetbrains.lets-plot:lets-plot-common:$lets_plot_version"
    compileOnly "org.jetbrains.lets-plot:lets-plot-batik:$lets_plot_version"
    compileOnly "org.jetbrains.lets-plot:lets-plot-jfx:$lets_plot_version"
    compileOnly "org.jetbrains.lets-plot:lets-plot-image-export:$lets_plot_version"
}


def artifactBaseName = 'lets-plot-kotlin-api'
def artifactGroupId = project.group
def artifactVersion = project.version

def task_group = 'lets plot'

task jarClasses(type: Jar, dependsOn: classes) {
    group task_group
    baseName artifactBaseName
    version artifactVersion
    from sourceSets.main.output
}

task jarSources(type: Jar) {
    classifier 'sources'
    group task_group
    baseName artifactBaseName
    version artifactVersion
    from sourceSets.main.allSource
}

task jarJavaDocs(type: Jar) {
    classifier 'javadoc'
    group task_group
    baseName artifactBaseName
    version artifactVersion
    from("$rootDir/README.md")
}


publishing {
    publications {
        letsPlotKotlinApi(MavenPublication) {
            groupId artifactGroupId
            artifactId artifactBaseName
            version artifactVersion

            artifact jarClasses
            artifact jarSources
            artifact jarJavaDocs

            pom {
                name = "Lets-Plot Kotlin API"
                description = "Lets-Plot Kotlin API"
                url = "https://github.com/JetBrains/lets-plot-kotlin"
                licenses {
                    license {
                        name = "MIT"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }
                developers {
                    developer {
                        id = "jetbrains"
                        name = "JetBrains"
                        email = "lets-plot@jetbrains.com"
                    }
                }
                scm {
                    url = "https://github.com/JetBrains/lets-plot-kotlin"
                }
                // Add dependency on lets-plot-common
                withXml {
                    def deps = asNode().appendNode('dependencies')
                    def dep = deps.appendNode('dependency')
                    dep.appendNode('groupId', 'org.jetbrains.lets-plot')
                    dep.appendNode('artifactId', 'lets-plot-common')
                    dep.appendNode('version', lets_plot_version)
                }
            }
        }

        letsPlotKotlinApiKernel(MavenPublication) {
            groupId artifactGroupId
            artifactId "$artifactBaseName-kernel"
            version artifactVersion

            artifact jarClasses
            artifact jarSources
            artifact jarJavaDocs

            pom {
                name = "Lets-Plot Kotlin API (for Jupyter Kotlin Kernel)"
                description = "Lets-Plot Kotlin API without fixed dependencies."
                url = "https://github.com/JetBrains/lets-plot-kotlin"
                licenses {
                    license {
                        name = "MIT"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }
                developers {
                    developer {
                        id = "jetbrains"
                        name = "JetBrains"
                        email = "lets-plot@jetbrains.com"
                    }
                }
                scm {
                    url = "https://github.com/JetBrains/lets-plot-kotlin"
                }
            }
        }
    }

    repositories {
        maven {
            url = project.sonatypeUrl
            credentials {
                username = project.buildSettings?.sonatype?.username
                password = project.buildSettings?.sonatype?.password
            }
        }
        mavenLocal {
            url = uri(project.localMavenRepository)
        }
    }
}

signing {
    sign publishing.publications.letsPlotKotlinApi
    sign publishing.publications.letsPlotKotlinApiKernel
}


// Store versions in properties to later access at runtime.
task saveVersions() {
    doLast {
        new File("${projectDir}/src/main/resources/letsPlotKotlinAPI/", "version.properties").text = """
lets_plot.version=$lets_plot_version
lets_plot_kotlin_api.version=${project.version}
"""
    }
}

compileKotlin.dependsOn += saveVersions


//task printIt {
//    print("${project.name}: ${uri(project.localMavenRepository)}")
//}

