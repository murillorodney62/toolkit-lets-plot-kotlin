/*
 * Copyright (c) 2021. JetBrains s.r.o.
 * Use of this source code is governed by the MIT license that can be found in the LICENSE file.
 */

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
//    id "com.jfrog.bintray"
    id "signing"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation project(':plot-api')
    compileOnly "org.geotools:gt-main:$geotools_version"
    compileOnly "org.geotools:gt-geojson:$geotools_version"

    testCompile "junit:junit:$junit_version"
    testImplementation "org.geotools:gt-main:$geotools_version"
    testImplementation "org.geotools:gt-geojson:$geotools_version"
}

// Due to this issue: https://stackoverflow.com/questions/26993105/i-get-an-error-downloading-javax-media-jai-core1-1-3-from-maven-central/26993223#26993223
// `osgeo` repo must precede Maven Central.
// Wherefore the declaration was moved to the root 'build.gradle'.
//repositories {
//    maven {
//        url "https://repo.osgeo.org/repository/release"
//    }
//}

def artifactBaseName = 'lets-plot-kotlin-geotools'
def artifactGroupId = project.group
def artifactVersion = project.version

def task_group = 'lets plot'

task jarClasses(type: Jar, dependsOn: classes) {
    group task_group
    baseName artifactBaseName
    version artifactVersion
    from sourceSets.main.output
}

task jarSources(type: Jar) {
    classifier 'sources'
    group task_group
    baseName artifactBaseName
    version artifactVersion
    from sourceSets.main.allSource
}

task jarJavaDocs(type: Jar) {
    classifier 'javadoc'
    group task_group
    baseName artifactBaseName
    version artifactVersion
    from("$rootDir/docs/geotools.md")
}

publishing {
    publications {
        letsPlotKotlinGeoTools(MavenPublication) {
            groupId artifactGroupId
            artifactId artifactBaseName
            version artifactVersion

            artifact jarClasses
            artifact jarSources
            artifact jarJavaDocs

            pom {
                name = "Lets-Plot Kotlin GeoTools Bridge"
                description = "Lets-Plot Kotlin GeoTools Bridge." +
                        "\nRequires GeoTools artifacts:" +
                        "\n - org.geotools:gt-main:$geotools_version" +
                        "\n - org.geotools:gt-geojson:$geotools_version"
                url = "https://github.com/JetBrains/lets-plot-kotlin"
                licenses {
                    license {
                        name = "MIT"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }
                developers {
                    developer {
                        id = "jetbrains"
                        name = "JetBrains"
                        email = "lets-plot@jetbrains.com"
                    }
                }
                scm {
                    url = "https://github.com/JetBrains/lets-plot-kotlin"
                }
                // Add dependency on 'geotools': gt-geojson, gt-main
//                withXml {
//                    def deps = asNode().appendNode('dependencies')
//                    def dep = deps.appendNode('dependency')
//                    dep.appendNode('groupId', 'org.geotools')
//                    dep.appendNode('artifactId', 'gt-geojson')
//                    dep.appendNode('version', geotools_version)
//                    dep = deps.appendNode('dependency')
//                    dep.appendNode('groupId', 'org.geotools')
//                    dep.appendNode('artifactId', 'gt-main')
//                    dep.appendNode('version', geotools_version)
//                }
            }
        }
    }

    repositories {
        maven {
//            url = uri("https://jetbrains.bintray.com/lets-plot-maven")
            url = project.sonatypeUrl
            credentials {
                username = project.buildSettings?.sonatype?.username
                password = project.buildSettings?.sonatype?.password
            }
        }
        mavenLocal {
            url = uri(project.localMavenRepository)
        }
    }
}

signing {
    sign publishing.publications.letsPlotKotlinGeoTools
}


//// Provide Bintray-specific Information
//def bintray_user = project.buildSettings?.bintray?.user
//def bintray_key = project.buildSettings?.bintray?.key
//
//if (bintray_user != null && bintray_key != null) {
//
//    def pkg_name = 'lets-plot-kotlin-jars'
//    if (ext.versionIsDev) {
//        pkg_name = 'lets-plot-kotlin-jars-dev'
//    }
//
//    bintray {
//        user = bintray_user
//        key = bintray_key
//        publications = ['letsPlotKotlinGeoTools']
//        publish = true
//        override = true
//
//        pkg {
//            repo = 'lets-plot-maven'
//            name = pkg_name
//            userOrg = 'jetbrains'
//            licenses = ['MIT']
//            vcsUrl = 'https://github.com/JetBrains/lets-plot-kotlin'
//            version {
//                name = artifactVersion
//            }
//        }
//    }
//}
